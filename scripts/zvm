#!/bin/bash
# requiredments: curl, tar, jq

set -e

INSTALL_DIR="$HOME/.local/share/zvm"
BIN_DIR="$HOME/.local/bin"

OS="unknown"
case "$OSTYPE" in
  darwin*)        OS="macos" ;;
  linux*)         OS="linux" ;;
  msys*|cygwin*)  OS="windows" ;;
  *)              echo "unknown OSTYPE: $OSTYPE" && exit 1 ;;
esac

ARCH=$(uname -m)
case "$ARCH" in
  arm64)         ARCH="aarch64" ;;
  x86|x86_64)    ;;
  *)             echo "unknown ARCH: $ARCH" && exit 1 ;;
esac

ZLS_INDEX=$(curl https://zigtools-releases.nyc3.digitaloceanspaces.com/zls/index.json)
VERSION=$1
if [[ $VERSION == "" ]]; then
	# Use latest supported ZLS version
	ZLS_VERSION=$(echo $ZLS_INDEX | jq -r '.latest')
	VERSION=$(echo $ZLS_INDEX | jq -r ".versions | .\"$ZLS_VERSION\" | .builtWithZigVersion")
else
	ZLS_VERSION=$(echo $ZLS_INDEX | jq -r "last(.versions | .[] | select(.builtWithZigVersion==\"$VERSION\")) | .zlsVersion")
fi

TRIPLET="zig-$OS-$ARCH-$VERSION"
ARCHIVE="$TRIPLET.tar.xz"

mkdir -p $INSTALL_DIR
pushd $INSTALL_DIR

if [ ! -d $VERSION ]; then
	echo "Downloading Zig $VERSION"
	curl "https://ziglang.org/download/$VERSION/$ARCHIVE" --output $ARCHIVE
	tar -xf $ARCHIVE
	rm $ARCHIVE

	mv $TRIPLET $VERSION
fi

mkdir -p $BIN_DIR
ln -sf $(readlink -f $VERSION/zig) $BIN_DIR/zig

if [[ $ZLS_VERSION != "" ]]; then
	mkdir -p $INSTALL_DIR/zls
	ZLS_INSTALL_PATH=$INSTALL_DIR/zls/$ZLS_VERSION
	if [ ! -f $ZLS_INSTALL_PATH ]; then
		echo "Downloading ZLS $ZLS_VERSION"
		curl https://zigtools-releases.nyc3.digitaloceanspaces.com/zls/$ZLS_VERSION/$ARCH-$OS/zls > $ZLS_INSTALL_PATH
		chmod +x $ZLS_INSTALL_PATH
	fi

	ln -sf $(readlink -f $ZLS_INSTALL_PATH) $BIN_DIR/zls
else
	echo "No ZLS built with Zig $VERSION, skipping"
fi
